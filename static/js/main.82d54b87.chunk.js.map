{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGood","e","good","target","textContent","setState","push","filter","el","this","length","lastGood","allGoods","slice","join","className","map","list","selected","includes","key","list_element","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4EaC,E,4MAxEbC,MAAQ,CACNC,aAAc,I,EAGhBA,aAAe,SAACC,EAAGC,GACY,QAAzBD,EAAEE,OAAOC,YACX,EAAKC,UAAS,SAACN,GAGb,OAFAA,EAAMC,aAAaM,KAAKJ,GAEhB,CACNF,aAAcD,EAAMC,iBAIxB,EAAKK,UAAS,SAACN,GAGb,MAAQ,CACNC,aAHYD,EAAMC,aAAaO,QAAO,SAAAC,GAAE,OAAIA,IAAON,U,4CAS3D,WAAU,IAAD,OACCF,EAAiBS,KAAKV,MAAtBC,aACAU,EAAWV,EAAXU,OACFC,EAAQ,eAAWX,EAAaU,EAAS,IAEzCE,EAAsB,IAAXF,EACbV,EACAA,EAAaa,MAAM,EAAGH,EAAS,GAAGI,KAAK,MAAQH,EAEnD,OACE,oCACE,yBAAKI,UAAU,OACb,wBAAIA,UAAU,SAAd,iBAEG,IACCL,EAAD,UAAmCE,EAAnC,gBAAU,qBAEb,yBAAKG,UAAU,SACZlB,EAAgBmB,KAAI,SAAAd,GAAI,OACvB,yBAAKa,UAAWA,IAAU,CACxBE,MAAM,EACNC,SAAUlB,EAAamB,SAASjB,MAGhC,yBACEkB,IAAKlB,EACLa,UAAWA,IAAU,CAAEM,cAAc,KAEpCnB,GAEH,6BACE,4BACEoB,KAAK,SACLP,UAAU,SACVQ,QAAS,SAAAtB,GAAC,OAAI,EAAKD,aAAaC,EAAGC,KAElCF,EAAamB,SAASjB,GAAQ,SAAW,mB,GA7D5CsB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.82d54b87.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport className from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGood: [],\n  }\n\n  selectedGood = (e, good) => {\n    if (e.target.textContent === 'add') {\n      this.setState((state) => {\n        state.selectedGood.push(good);\n\n        return ({\n          selectedGood: state.selectedGood,\n        });\n      });\n    } else {\n      this.setState((state) => {\n        const goods = state.selectedGood.filter(el => el !== good);\n\n        return ({\n          selectedGood: goods,\n        });\n      });\n    }\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n    const { length } = selectedGood;\n    const lastGood = ` and ${selectedGood[length - 1]}`;\n\n    const allGoods = length === 1\n      ? selectedGood\n      : selectedGood.slice(0, length - 1).join(', ') + lastGood;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1 className=\"state\">\n            Selected good:\n            {' '}\n            {!length ? 'No goods selected' : `${allGoods} is selected`}\n          </h1>\n          <div className=\"goods\">\n            {goodsFromServer.map(good => (\n              <div className={className({\n                list: true,\n                selected: selectedGood.includes(good),\n              })}\n              >\n                <div\n                  key={good}\n                  className={className({ list_element: true })}\n                >\n                  {good}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={e => this.selectedGood(e, good)}\n                  >\n                    {selectedGood.includes(good) ? 'remove' : 'add'}\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}